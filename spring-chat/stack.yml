version: '3.8'
services:

  # Traefik Reverse Proxy for routing various applications.
  ### NOTE: Make sure to point *.docker.localhost to your localhost/IP-address
  reverse-proxy:
    image: traefik:v2.10.5 # The official Traefik docker image
    container_name: traefik
    restart: unless-stopped
    command:
      - "--api.insecure=true"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.swarmMode=true"
      - "--accesslog=true"
      - "--providers.docker.defaultRule=Host(`{{ .Name }}.{{ index .Labels \"customLabel\"}}`)"
    ports:
      - "80:80"
      - "8080:8080"
    deploy:
      labels:
        - traefik.http.routers.proxy.rule=PathPrefix(`/reverse`) || Host(`proxy.docker.localhost`)
        - traefik.http.routers.proxy.tls=false
        - traefik.http.services.proxy.loadbalancer.server.port=8080
        - traefik.http.routers.proxy.service=proxy  
      placement:
        constraints:
          - node.role == manager      
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events

  redis:
    image: bitnami/redis:7.2.3
    restart: unless-stopped
    environment:
      - REDIS_PASSWORD=SuperSecretRedisPassword
    ports:
      - "6379:6379"
    volumes:
      - 'redis_data:/bitnami/redis/data'
    deploy: 
      labels:
        - traefik.enabled=false

  spring-chat-jvmx:
    image: rawsanj/spring-redis-websocket:3.2.0-jvm
    restart: unless-stopped
    environment:
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PASSWORD=SuperSecretRedisPassword
    ports:
      - "8081:8080"
    depends_on:
      - redis
    deploy:
      replicas: 3
      mode: replicated   
      labels:
        - traefik.http.routers.chat.rule=PathPrefix(`/`) || Host(`chat.docker.localhost`) || HostRegexp(`{subdomain:[a-z]+}.direct.labs.play-with-docker.com`) # PathPrefix(`/`) rule is helpful when running on play-with-docker.com to access chat app directly on port 80
        - traefik.http.services.chat-service.loadbalancer.server.port=8080
        - traefik.http.routers.chat.service=chat-service
      
  spring-chat-native:
    image: rawsanj/spring-redis-websocket:3.2.0-native
    restart: unless-stopped
    environment:
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PASSWORD=SuperSecretRedisPassword
    ports:
      - "8082:8080"
    depends_on:
      - redis
    deploy:
      replicas: 3
      mode: replicated    
      labels:
        - traefik.http.routers.chat.rule=PathPrefix(`/`) || Host(`chat.docker.localhost`) || HostRegexp(`{subdomain:[a-z]+}.direct.labs.play-with-docker.com`) # PathPrefix(`/`) rule is helpful when running on play-with-docker.com to access chat app directly on port 80
        - traefik.http.services.chat-service.loadbalancer.server.port=8082
        - traefik.http.routers.chat.service=chat-service
      
volumes:
  redis_data:
